version: '3.7'
services:

  zoo1:
    image: cithub/zookeeper
    hostname: zoo1
    container_name: zoo1
    restart: always
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888
    volumes:
      - ./data/zoo1/datalog:/datalog
      - ./data/zoo1/data:/data
      - ./data/zoo1/logs:/logs
    networks:
      - mongo

  mongo1:
    image: mongo
    restart: always
    hostname: mongo1
    container_name: mongo1
    command: --serviceExecutor adaptive --replSet 'fifo' --bind_ip localhost,mongo1
    ports:
      - 27017:27017
    volumes:
      - ./data/mongo:/data/mongo
    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: password
      MONGODB_ADVERTISED_HOSTNAME: mongo1
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_KEY: fifo
    networks:
      - mongo

  mongo2:
    image: mongo
    restart: always
    hostname: mongo2
    container_name: mongo2
    command: --serviceExecutor adaptive --port 27019 --replSet 'fifo' --bind_ip localhost,mongo2
    ports:
      - 27019:27019
    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: password
      MONGODB_ADVERTISED_HOSTNAME: mongo2
      MONGODB_REPLICA_SET_MODE: secondary
      MONGODB_REPLICA_SET_KEY: fifo
    depends_on:
      - mongo1
    networks:
      - mongo

  mongo-express:
    image: mongo-express
    restart: always
    hostname: mongo-express
    container_name: mongo-express
    ports:
      - 8081:8081
    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: root
#      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongo1
      ME_CONFIG_MONGODB_PORT: 27017
    depends_on:
      - mongo1
      - mongo2
    networks:
      - mongo

  prometheus:
    image: prom/prometheus
    restart: always
    hostname: prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./docker/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - mongo

  grafana:
    image: grafana/grafana
    restart: always
    hostname: grafana
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - mongo

  mongo-queue:
    image: mongo-queue:v1
    hostname: mongo-queue
    container_name: mongo-queue
    ports:
      - 8080:8080
    environment:
      DB_MONGO_HOST: mongo1
      ZK_CONNECT_URL: zoo1:2181
    networks:
      - mongo

networks:
  mongo: